<?php

namespace Barn2\Plugin\Discount_Manager\Traits;

use Barn2\Plugin\Discount_Manager\Products;
use WC_Cart;
use WC_Order;

/**
 * Trait for calculating the subtotal of a cart or order.
 *
 * @package   Barn2\woocommerce-discount-manager
 * @author    Barn2 Plugins <support@barn2.com>
 * @license   GPL-3.0
 * @copyright Barn2 Media Ltd
 */
trait Discount_With_Calculated_Subtotal {
	/**
	 * Get the appropriate subtotal used to determine the dynamic discount amount
	 * generated by the fixed price.
	 *
	 * - If the discount applies to all products, then the subtotal of the cart is used.
	 * - If the discount applies to specific products, then the subtotal of those products combined is used.
	 * - If the discount applies to specific categories, then the subtotal of the products in those categories combined is used.
	 *
	 * The subtotal also needs to take into account whether prices include tax.
	 *
	 * @param WC_Cart $cart The cart.
	 * @return float The subtotal.
	 */
	private function get_cart_subtotal( WC_Cart $cart ): float {
		$applies_to_all_products        = $this->discount->is_applicable_to_all_products();
		$applies_to_specific_products   = $this->discount->is_applicable_to_specific_products();
		$applies_to_specific_categories = $this->discount->is_applicable_to_specific_categories();

		$subtotal = 0;

		if ( $applies_to_specific_products || $applies_to_all_products ) {
			$products_to_discount = $this->discount->get_relevant_products( $cart );

			foreach ( $products_to_discount as $cart_item_key => $cart_item ) {
				$subtotal += Products::get_product_price( $cart_item['data'] ) * $cart_item['quantity'];
			}
		} elseif ( $applies_to_specific_categories ) {
			$products_to_discount = $this->discount->get_relevant_products( $cart );

			foreach ( $products_to_discount as $cart_item_key => $cart_item ) {
				$subtotal += Products::get_product_price( $cart_item['data'] ) * $cart_item['quantity'];
			}
		}

		return $subtotal;
	}

	/**
	 * Get the appropriate subtotal used to determine the dynamic discount amount
	 * generated by the fixed price.
	 *
	 * - If the discount applies to all products, then the subtotal of the order is used.
	 * - If the discount applies to specific products, then the subtotal of those products combined is used.
	 * - If the discount applies to specific categories, then the subtotal of the products in those categories combined is used.
	 *
	 * The subtotal also needs to take into account whether prices include tax.
	 *
	 * @param WC_Order $order The order.
	 * @return float The subtotal.
	 */
	private function get_order_subtotal( WC_Order $order ): float {
		$applies_to_all_products        = $this->discount->is_applicable_to_all_products();
		$applies_to_specific_products   = $this->discount->is_applicable_to_specific_products();
		$applies_to_specific_categories = $this->discount->is_applicable_to_specific_categories();

		$subtotal = 0;

		if ( $applies_to_specific_products || $applies_to_all_products ) {
			$products_to_discount = $this->discount->get_relevant_products( false, $order );

			foreach ( $products_to_discount as $order_item_key => $order_item ) {
				$subtotal += $order_item->get_total();
			}
		} elseif ( $applies_to_specific_categories ) {
			$products_to_discount = $this->discount->get_relevant_products( false, $order );

			foreach ( $products_to_discount as $order_item_key => $order_item ) {
				$subtotal += $order_item->get_total();
			}
		}

		return $subtotal;
	}
}
